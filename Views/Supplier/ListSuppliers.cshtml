@using CollectApp.ViewModels
@model PagedResultViewModel<SupplierListViewModel>
@{
    ViewData["Title"] = "Lista de fornecedores";
    ViewBag.Message = TempData["Message"];
    ViewBag.ShowModal = TempData["ShowModal"];
}

<div class="container">
    <h1 class="mb-2">Lista de fornecedores</h1>
    <a class="nav-link text-primary mb-4 d-inline-block" asp-area="" asp-controller="Supplier" asp-action="CreateSupplier">Inserir fornecedor</a>

    <table class="table table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Items[0].Id)</th>
                <th>@Html.DisplayNameFor(model => model.Items[0].Name)</th>
                <th>@Html.DisplayNameFor(model => model.Items[0].CNPJ)</th>
                <th>@Html.DisplayNameFor(model => model.Items[0].Address)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (SupplierListViewModel supplier in Model.Items)
    {
            <tr>
                <td>@Html.DisplayFor(item => supplier.Id)</td>
                <td>@Html.DisplayFor(item => supplier.Name)</td>
                <td>@Html.DisplayFor(item => supplier.CNPJ)</td>
                <td>@Html.DisplayFor(item => supplier.Address)</td>
                <th class="text-end">
                    <a asp-action="EditSupplier" asp-route-id="@supplier.Id">
                        <img src="~/assets/img/pencil-icon.svg" alt="Edit button" width="24" height="24" />
                    </a>
                    <button type="button" class="p-0 border-0 bg-transparent" data-bs-toggle="modal" data-bs-target="#deleteModal-@supplier.Id">
                        <img src="~/assets/img/trash-icon.svg" alt="Trash button" width="24" height="24" />
                    </button>
                </th>
            </tr>
            @await Html.PartialAsync("_DeleteSupplierModal", supplier.Id)
    }      
        </tbody>  
    </table>

    @await Html.PartialAsync("_SupplierPaginationButtons", new PaginationViewModel { TotalPages = Model.TotalPages, CurrentPage = Model.PageNum })
</div>

@await Html.PartialAsync("_SupplierModalError", ViewBag.Message as string)

@section Scripts 
{
    <script>
        document.addEventListener("click", function (e) {
            if (e.target.classList.contains("page-button")) {
                const page = e.target.getAttribute("data-page");
                if (parseInt(page) !== @Model.PageNum) {
                    window.location.href = `/Supplier/ListSuppliers?pageNum=${page}`;
                }
            }
        });
    </script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var showModal = '@ViewBag.ShowModal' === 'True';
            if (showModal) {
                var modalElement = document.getElementById('SupplierModalError');
                if (modalElement) {
                    var modal = new bootstrap.Modal(modalElement);
                    modal.show();
                }
            }
        });
    </script>
}