@using CollectApp.ViewModels
@model PagedResultViewModel<CollectListViewModel>
@{
    ViewData["Title"] = "Lista de coletas";
}

<div class="container">
    <h1 class="mb-2">Lista de coletas</h1>
    <a class="nav-link text-primary mb-4 d-inline-block" asp-area="" asp-controller="Collect" asp-action="CreateCollect">Inserir coleta</a>

    <table class="table table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.Items[0].Id)</th>
                <th>@Html.DisplayNameFor(model => model.Items[0].CreatedAt)</th>
                <th>@Html.DisplayNameFor(model => model.Items[0].UserName)</th>
                <th>@Html.DisplayNameFor(model => model.Items[0].SupplierName)</th>
                <th>@Html.DisplayNameFor(model => model.Items[0].CollectAt)</th>
                <th>@Html.DisplayNameFor(model => model.Items[0].ProductDescription)</th>
                <th>@Html.DisplayNameFor(model => model.Items[0].Status)</th>
                <th>@Html.DisplayNameFor(model => model.Items[0].Volume)</th>
                <th>@Html.DisplayNameFor(model => model.Items[0].Weigth)</th>
                <th>@Html.DisplayNameFor(model => model.Items[0].Filial)</th>
                <th></th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (CollectListViewModel collect in Model.Items)
    {
            <tr>
                <td>@Html.DisplayFor(item => collect.Id)</td>
                <td>@Html.DisplayFor(item => collect.CreatedAt)</td>
                <td>@Html.DisplayFor(item => collect.UserName)</td>
                <td>@Html.DisplayFor(item => collect.SupplierName)</td>
                <td>@Html.DisplayFor(item => collect.CollectAt)</td>
                <td>@Html.DisplayFor(Item => collect.ProductDescription)</td>
                <td>@Html.DisplayFor(item => collect.Status)</td>
                <td>@Html.DisplayFor(item => collect.Volume)</td>
                <td>@Html.DisplayFor(item => collect.Weigth)</td>
                <td>@Html.DisplayFor(item => collect.Filial)</td>
                <td>@await Html.PartialAsync("_CollectsStatusButton", collect.ChangeStatus)</td>
                <td>@await Html.PartialAsync("_CollectsButtons", collect.ChangeCollect)</td>
            </tr>
    }   
        </tbody>     
    </table>

    @await Html.PartialAsync("_CollectPaginationButtons", new PaginationViewModel { TotalPages = Model.TotalPages, CurrentPage = Model.PageNum })
</div>

<script>
        document.addEventListener("click", function(e) {
            if (e.target.classList.contains("page-button")) {
                const page = e.target.value;
                if (parseInt(page) !== @Model.PageNum) {
                    window.location.href = `/Collect/ListCollects?pageNum=${page}`;
                }
            }
        });
</script>