@using CollectApp.ViewModels
@using Microsoft.AspNetCore.Http.Features
@model PagedResultViewModel<ProductListViewModel, ProductFilterViewModel>
@{
    ViewData["Title"] = "Lista de produtos";
    ViewBag.Message = TempData["Message"];
    ViewBag.ShowModal = TempData["ShowModal"];
}

<div class="container">
    <h1 class="mb-2">Lista de produtos</h1>
    <a class="nav-link text-primary mb-4 d-inline-block" asp-area="" asp-controller="Product" asp-action="CreateProduct">Inserir produto</a>

    <div>@await Html.PartialAsync("_ProductFilters", Model.Filters)</div>

    <table class="table table-hover" style="table-layout: fixed;">
        <thead>
            <tr>
                <th style="width: 60px;">@Html.DisplayNameFor(model => model.Items[0].Id)</th>
                <th style="width: 120px;">@Html.DisplayNameFor(model => model.Items[0].Name)</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (ProductListViewModel product in Model.Items)
    {
            <tr>
                <td>@Html.DisplayFor(item => product.Id)</td>
                <td>@Html.DisplayFor(item => product.Name)</td>
                <td class="text-end">
                    <a asp-action="EditProduct" asp-route-id="@product.Id">
                        <img src="~/assets/img/pencil-icon.svg" alt="Edit button" width="24" height="24" />
                    </a>
                    <button type="button" class="p-0 border-0 bg-transparent" data-bs-toggle="modal" data-bs-target="#deleteModal-@product.Id">
                        <img src="~/assets/img/trash-icon.svg" alt="Trash button" width="24" height="24" />
                    </button>
                    <button data-entity="Product" data-id="@product.Id" type="button" class="log-list-button p-0 border-0 bg-transparent">
                        <img src="~/assets/img/list-icon.svg" alt="Log list button" width="24" height="24" />
                    </button>
                </td>
            </tr>
            @await Html.PartialAsync("_DeleteModal", new DeleteModalViewModel { Id = product.Id, Type = "Product", Title = "o produto"})
    }  
        </tbody>      
    </table>

    @await Html.PartialAsync("_PaginationButtons", new PaginationViewModel { TotalPages = Model.TotalPages, CurrentPage = Model.PageNum })
</div>

@await Html.PartialAsync("_ModalError", ViewBag.Message as string)
@await Html.PartialAsync("_LogsModal")

@section Scripts 
{
    <script>
        document.addEventListener("click", function(e) {
            if (!e.target.classList.contains("page-button")) return;

            const page = e.target.value;
            const currentPage = @Model.PageNum;

            if (parseInt(page) === currentPage) return;

            const params = new URLSearchParams(window.location.search);
            params.set("pageNum", page);

            window.location.href = `${window.location.pathname}?${params.toString()}`;
        });
    </script>


    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var showModal = '@ViewBag.ShowModal' === 'True';
            if (showModal) {
                var modalElement = document.getElementById('ModalError');
                if (modalElement) {
                    var modal = new bootstrap.Modal(modalElement);
                    modal.show();
                }
            }
        });
    </script>
}